import streamlit as st
import datetime
import json
import os

def teacher_match(option):
    teachers = {
        "1": "‡∏ú‡∏®.‡∏î‡∏£.‡∏ä‡∏µ‡∏ß‡∏±‡∏ô", "2": "‡∏≠.‡∏ì‡∏±‡∏ê‡∏ò‡∏¥‡∏î‡∏≤", "3": "‡∏≠.‡∏≠‡∏£‡∏ó‡∏±‡∏¢", "4": "‡∏≠.‡∏à‡∏¥‡∏ï‡∏ï‡πå‡∏ï‡∏£‡∏≤",
        "5": "‡∏≠.‡∏Å‡∏§‡∏ï‡πÄ‡∏°‡∏ò", "6": "‡∏≠.‡∏ì‡∏±‡∏ê‡∏ô‡∏±‡∏ô‡∏ó‡πå", "7": "‡∏≠.‡∏§‡∏ó‡∏ò‡∏¥‡∏ä‡∏±‡∏¢", "8": "‡∏≠.‡∏ä‡∏ß‡∏•‡∏¥‡∏ï",
        "9": "‡∏≠.‡∏û‡∏´‡∏∏‡∏Å‡∏£", "10": "‡∏≠.‡∏Ñ‡∏°‡∏™‡∏±‡∏ô‡∏ï‡πå", "11": "‡∏≠.‡∏ò‡∏µ‡∏£‡∏†‡∏±‡∏ó‡∏£", "12": "‡∏≠.‡∏ä‡∏ô‡∏±‡∏¢‡∏™‡∏∏‡∏î‡∏≤",
        "13": "‡∏≠.‡∏™‡∏∏‡∏£‡∏≤‡∏á‡∏Ñ‡πå", "14": "‡∏≠.‡∏Å‡∏±‡∏ç‡∏à‡πå‡∏û‡∏™‡∏¥‡∏©‡∏ê‡πå", "15": "‡∏≠.‡∏î‡∏£.‡∏ì‡∏±‡∏ê", "16": "Aj.jessica",
        "17": "‡∏≠.‡∏™‡∏¥‡∏£‡∏¥‡∏Å‡∏∏‡∏•", "18": "‡∏≠.‡∏ì‡∏†‡∏±‡∏™‡∏ß‡∏£‡∏£‡∏Å‡πå"
    }
    return teachers.get(option, "Invalid option")

def load_homework():
    try:
        with open('homework.json', 'r') as f:
            data = f.read()
            if not data:
                return []
            return json.loads(data)
    except FileNotFoundError:
        return []
    except json.JSONDecodeError:
        return []

def save_homework(homework_list):
    with open('homework.json', 'w') as f:
        json.dump(homework_list, f)

def main():
    st.set_page_config(page_title="‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô", page_icon="üìö", layout="wide")
    
    dark_mode = st.sidebar.checkbox("Dark Mode")
    
    if dark_mode:
        st.markdown(
            """
            <style>
            body {
                color: #E0E0E0;
                background-color: #1E1E1E;
            }
            .stApp {
                background-color: #1E1E1E;
            }
            .stTextInput > div > div > input,
            .stTextArea > div > div > textarea,
            .stSelectbox > div > div > div,
            .stDateInput > div > div > input {
                color: #E0E0E0;
                background-color: #2D2D2D;
            }
            .stButton > button {
                color: #E0E0E0;
                background-color: #3D3D3D;
                border: none;
            }
            .stButton > button:hover {
                background-color: #4D4D4D;
            }
            h1, h2, h3, label, .stSelectbox label, .stTextArea label, .stDateInput label {
                color: #FFFFFF !important;
            }
            .stAlert {
                background-color: #2D2D2D;
                color: #E0E0E0;
            }
            .stDateInput > div > div {
                background-color: #000000;
                border: 1px solid #FFFFFF;
            }
            .stDateInput input {
                color: #E0E0E0 !important;
                background-color: #000000 !important;
            }
            .stSidebar {
                background-color: #1E1E1E;
            }
            @media (max-width: 768px) {
                .stApp {
                    padding: 1rem;
                }
                .stTextInput > div > div > input,
                .stTextArea > div > div > textarea,
                .stSelectbox > div > div > div,
                .stDateInput > div > div > input {
                    font-size: 14px;
                }
                h1 {
                    font-size: 24px;
                }
                h2 {
                    font-size: 20px;
                }
                h3 {
                    font-size: 18px;
                }
            }
            </style>
            """,
            unsafe_allow_html=True
        )
    
    st.title("‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô üìö")

    if 'homework_list' not in st.session_state:
        st.session_state.homework_list = load_homework()

    container = st.container()

    with container:
        st.subheader("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà")
        subject_options = {
            "1": "‡∏ô‡∏≤‡∏é‡∏®‡∏¥‡∏•‡∏õ‡πå", "2": "‡∏î‡∏ô‡∏ï‡∏£‡∏µ‡∏™‡∏≤‡∏Å‡∏•", "3": "‡∏Ñ‡∏ì‡∏¥‡∏ï A", "4": "‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏∏‡∏î",
            "5": "‡∏û‡∏•‡∏∞", "6": "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢", "7": "‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "8": "‡∏Ñ‡∏ì‡∏¥‡∏ï B",
            "9": "‡∏™‡∏∏‡∏Ç‡∏®‡∏∂‡∏Å‡∏©‡∏≤", "10": "‡∏®‡∏¥‡∏•‡∏õ‡∏∞", "11": "‡∏û‡∏£‡∏∞‡∏û‡∏∏‡∏ó‡∏ò", "12": "‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
            "13": "‡∏ß‡∏¥‡∏ó‡∏¢‡πå", "14": "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå", "15": "‡∏Ñ‡∏ì‡∏¥‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
            "16": "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©(jessica)", "17": "‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©(‡∏≠.‡∏™‡∏¥‡∏£‡∏¥‡∏Å‡∏∏‡∏•)", "18": "technology"
        }
        option = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤", options=list(subject_options.keys()), format_func=lambda x: subject_options[x])
        teacher = teacher_match(option)
        text = st.text_area("‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô")
        due_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô")

        if st.button("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô"):
            if teacher != "Invalid option" and text and due_date:
                st.session_state.homework_list.append({
                    "subject": subject_options[option],
                    "teacher": teacher,
                    "text": text,
                    "due_date": due_date.strftime('%Y-%m-%d'),
                    "assigned_date": datetime.datetime.now().strftime('%Y-%m-%d')
                })
                save_homework(st.session_state.homework_list)
                st.success("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
            else:
                st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")

        st.subheader("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
        if st.session_state.homework_list:
            today = datetime.datetime.now()
            output = f"‡∏à‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô üìï„Ää{today.strftime('%d %b %Y')}„Äã\n"
            output += "======================\n"
            for i, homework in enumerate(st.session_state.homework_list):
                output += f"#{homework['subject']}\n"
                output += f"-{homework['text']}\n"
                due_date = datetime.datetime.strptime(homework['due_date'], '%Y-%m-%d')
                output += f"[{due_date.strftime('%d %b %Y')}]" + "{" + f"{homework['teacher']}" + "}\n"
            output += "******************************"
            st.text_area("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô", value=output, height=300)

            st.subheader("‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô")
            homework_to_remove = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö", 
                                              options=range(len(st.session_state.homework_list)),
                                              format_func=lambda x: f"{st.session_state.homework_list[x]['subject']} - {st.session_state.homework_list[x]['text'][:30]}...")
            if st.button("‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô"):
                removed_homework = st.session_state.homework_list.pop(homework_to_remove)
                save_homework(st.session_state.homework_list)
                st.success(f"‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô '{removed_homework['subject']}' ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        else:
            st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô")

if __name__ == "__main__":
    main()
